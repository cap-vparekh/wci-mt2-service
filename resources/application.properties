
# Spring configuration
spring.application.name=snomed-refset-service
spring.jackson.serialization.INDENT_OUTPUT=true

management.endpoints.web.exposure.include=
#heapdump,liquibase,loggers,prometheus,threaddump,info,metrics,health

# swagger (springdoc) - (requires login)
# e.g. http://local.ihtsdotools.org:8888/refsetservice/swagger-ui.html
# e.g. http://local.ihtsdotools.org:8888/refsetservice/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.doc-expansion=none 

# Spring Session Properties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_HOST:none}:${DB_PORT:none}/${DB_DATABASE:none}?serverTimezone=UTC
spring.datasource.username=${DB_USER:none}
spring.datasource.password=${DB_PASSWORD:none}
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.timeout.seconds=86400
server.servlet.session.timeout=86400

# Server Properties
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/refsetservice
server.servlet.session.persistent=false
 
# Application Properties
deploy.title=Mapping Service Application
app.metrics.enabled=false
app.entity_packages=org.ihtsdo.refsetservice.model
app.db_name=${DB_DATABASE:none}
app.elasticsearch.index.prefix=${ELASTICSEARCH_INDEX_PREFIX:none}

# Refset Export Properties
export.fileDir=${REFSET_EXPORT_DIR:none}

# Mapset Export Properties
mapexport.fileDir=${MAPSET_EXPORT_DIR:/tmp}
mapexport.file=${MAPSET_EXPORT:ExportMaps.txt}

# AWS Properties
aws.access.key.id=${AWS_ID:none}
aws.secret.access.key=${AWS_SECRET_KEY:none}
aws.bucket=${AWS_BUCKET:none}
aws.region=${AWS_REGION:none}
aws.project.base.dir=${AWS_PROJECT_BASE_DIR:none}
aws.icon.dir=${AWS_ICON_DIR:none}
aws.artifact.dir=${AWS_ARTIFCAT_DIR:none}

# Terminology Handler Properties
# The terminology.handler value is the key to identify which handler this tool is using.
# Current options for terminology.handler are: SNOMED_SNOWSTORM,JSON
terminology.handler=${TERMINOLOGY_HANDLER:none}
terminology.handler.SNOMED_SNOWSTORM.class=org.ihtsdo.refsetservice.handler.SNOMEDSnowstormTerminologyServerHandler
terminology.handler.SNOMED_SNOWSTORM.username=${SNOMED_SNOWSTORM_USERNAME:none}
terminology.handler.SNOMED_SNOWSTORM.password=${SNOMED_SNOWSTORM_PASSWORD:none}
terminology.handler.SNOMED_SNOWSTORM.authUrl=${SNOMED_SNOWSTORM_AUTH_URL:none}
terminology.handler.SNOMED_SNOWSTORM.baseUrl=${SNOMED_SNOWSTORM_BASE_URL:none}
terminology.handler.SNOMED_SNOWSTORM.dir=${SNOMED_SNOWSTORM_DIR:none}
terminology.handler.JSON.class=org.ihtsdo.refsetservice.handler.JSONTerminologyServerHandler
terminology.handler.JSON.dir=${JSON_DIR:none}

# Search Handlers
search.handler=DEFAULT
search.handler.DEFAULT.class=org.ihtsdo.refsetservice.handler.DefaultSearchHandler

# ----------------------------------------
# Spring cloud consul config
# ----------------------------------------
spring.cloud.consul.enabled=false
#spring.cloud.consul.config.prefix=consul
#spring.application.name=snowstorm
#spring.cloud.consul.discovery.healthCheckPath=/version
#spring.cloud.consul.config.profile-separator=/
#spring.config.import=consul:localhost:8500

# ----------------------------------------
# Spring vault config
# ----------------------------------------
spring.cloud.vault.enabled=false
#spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
#spring.cloud.vault.scheme=http
#spring.cloud.vault.kv.enabled=true
#spring.config.import=consul:localhost:8500,vault://
#spring.cloud.vault.uri=http://localhost:8200

#
# Persistence Properties
#

# Spring JPA Configuration
#spring.h2.console.enabled=true

# Jpa-Hibernate Datasource Configuration
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.connection.url=jdbc:mysql://${DB_HOST:none}:${DB_PORT:none}/${DB_DATABASE:none}?serverTimezone=UTC
spring.jpa.properties.hibernate.connection.username=${DB_USER:none}
spring.jpa.properties.hibernate.connection.password=${DB_PASSWORD:none}

# Jpa-Hibernate ORM Configuration
spring.jpa.properties.hibernate.archive.autodetection=class,hbm
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.charSet=UTF-8
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=5000
spring.jpa.properties.hibernate.jdbc.default_batch_fetch_size=320
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-configure-hibernate-naming-strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Elasticsearch Configuration
spring.jpa.properties.hibernate.search.backend.type=elasticsearch
spring.jpa.properties.hibernate.search.backend.layout.strategy=class:org.ihtsdo.refsetservice.configuration.ElasticsearchCustomLayoutStrategy
spring.jpa.properties.hibernate.search.backend.hosts=${ELASTICSEARCH_HOST:none}
spring.jpa.properties.hibernate.search.backend.protocol=${ELASTICSEARCH_PROTOCOL:none}
spring.jpa.properties.hibernate.search.backend.username=${ELASTICSEARCH_USER:none}
spring.jpa.properties.hibernate.search.backend.password=${ELASTICSEARCH_PASSWORD:none}
spring.jpa.properties.hibernate.search.schema_management.strategy=create
spring.jpa.properties.hibernate.search.automatic_indexing.synchronization.strategy=read-sync
spring.jpa.properties.hibernate.search.backend.log.json_pretty_printing=true

# Flyway Configuration
spring.flyway.enabled=true
flyway.database.name=${DB_DATABASE:none}
flyway.user=${DB_USER:none}
flyway.password=${DB_PASSWORD:none}
flyway.url=jdbc:mysql://${DB_HOST:none}:${DB_PORT:none}/${DB_DATABASE:none}?serverTimezone=UTC
flyway.locations=classpath:db/migration
spring.flyway.placeholders.pre_if_exists=
spring.flyway.placeholders.post_if_exists=if exists
spring.flyway.placeholders.create_mapping_events_seq=
spring.flyway.placeholders.auto_increment=BIGINT auto_increment
spring.flyway.placeholders.jsonb=text

# connection pooling
spring.jpa.properties.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.jpa.properties.hibernate.hikari.minimumIdle=5
spring.jpa.properties.hibernate.hikari.maximumPoolSize=10
spring.jpa.properties.hibernate.hikari.idleTimeout=300000

#
# URL for security service
#
security.guest.disabled=false
security.handler=IMS
security.handler.IMS.class=org.ihtsdo.refsetservice.handler.ImsSecurityServiceHandler
security.handler.IMS.url=${IMS_AUTH_URL:https://dev-ims.ihtsdotools.org/api/}
security.handler.IMS.url.logout=${IMS_AUTH_URL_LOGOUT:https://dev-ims.ihtsdotools.org/#/logout/}
security.handler.IMS.users.admin=
security.handler.IMS.users.author=
security.handler.IMS.users.reviewer=

#
# RT2 API token
#
jwt.secret=${JWT_SECRET:changeme}
jwt.issuer=https://www.snomed.org
jwt.audience=https://www.snomed.org

#
# Crowd connection
#
crowd.baseUrl=${CROWD_URL:none} 
crowd.username=${CROWD_USERNAME:none}
crowd.password=${CROWD_PASSWORD:none}

#
# user provided images
#

refset.service.icon.server.dir=${ICON_SERVER_DIR:none}
# delimited by semi-colon
refset.service.icon.file.types=.svg;.png;.jpg;.jpeg
# in bytes
refset.service.icon.file.maxsize=2000000

# Artifact Properties
refset.service.artifact.server.dir=${ARTIFACT_SERVER_DIR:none}

# email Properties
mail.enabled=true
mail.smtp.starttls.enable=true
mail.smtp.auth=true
mail.smtp.user=${MAIL_USER:none}
mail.smtp.from=${MAIL_FROM:none}
mail.smtp.password=${MAIL_PASSWORD:none}
mail.smtp.host=${MAIL_HOST:none}
mail.smtp.port=${MAIL_PORT:none}
mail.smtp.error.to=${MAIL_ERROR_TO:none}
mail.smtp.postsync.report.to=${POST_SYNC_REPORT_USERS:}
aws.email.access.key.id=${AWS_ACCESS_KEY_ID:none}
aws.email.secret.access.key=${AWS_SECRET_ACCESS_KEY:none}

refset.service.env=LOCAL
app.url.root=${APP_URL_ROOT:none}

#system user filter list
refset.service.system.accounts=feedbackInitiator,refset-dev,rt2-dev-admin,feedbackResponder

